#!/bin/bash
source librandum.bash
UPDATE_INTERVAL=1
REFIND_TEMPLATE=/root/refind.template
# Add any known themes to the possible_theme_paths array
REFIND_CONF="/boot/efi/EFI/refind/refind.conf"
theme_dir_path="/boot/efi/EFI/refind"
#theme_dir_paths+=("/usr/share/grub/themes") 
#possible_theme_paths+=("/usr/share/grub/themes/Vimix)
THIS_LOGDIR=/tmp
THIS_NAME=randomrefind
EXCLUDE_FILE=/root/.exclude_refinds
HISTORY_FILE=/var/log/.past_refinds
# Derived
THIS_LOG=$THIS_LOGDIR/$THIS_NAME.log
THIS_ERR=$THIS_LOGDIR/$THIS_NAME.err

open_file $THIS_LOG
open_file $THIS_ERR

trap cleanup EXIT

if [[ $1 == "--force" ]]; then 
  USE_THE_FORCE_LUKE='true'
else
  USE_THE_FORCE_LUKE='false'
fi

main () {
  NOW=$(date +'%s')
  date -I >> $THIS_LOG
  refind_theme_finder "$theme_dir_path"

  if [[ ! -f $HISTORY_FILE ]]; then
    touch $HISTORY_FILE
  fi
  # process possible themes
  cd "$theme_dir_path"
  for value in "${possible_theme_paths[@]}"
  do
    #ls -alh "$value"
    if [[ -f "$value" ]]; then
      alt_theme_paths+=("$value")
      #echo alt $value
      grep "$value"  "$HISTORY_FILE" &> /dev/null
      hist_check=$?
      grep "$value"  "$EXCLUDE_FILE" &> /dev/null
      exclude_check=$?
      #echo hist_check $hist_check
      #echo exclude_check $exclude_check
      if [[ $hist_check -gt 0 && $exclude_check -gt 0 ]];then
        theme_paths+=("$value")
        #echo $value
      fi
    fi
  done
  #if [[ ${#theme_paths[@]} -eq 0 ]]; then
  if [[ -z "${theme_paths}" ]]; then
    echo 'clear history file'
    echo '' > $HISTORY_FILE
    theme_paths=("${alt_theme_paths[@]}")
  fi
  
#  print_all
  
  export REFIND_THEME=${theme_paths[ $RANDOM % ${#theme_paths[@]} ]}
  echo $REFIND_THEME >> $HISTORY_FILE
  echo $REFIND_THEME >> $THIS_LOG
  echo $REFIND_THEME
  
  if [[ -f ${REFIND_TEMPLATE} ]]; then
    echo '# DO NOT EDIT THIS FILE! IT IS GENERATED AUTOMATICALLY EVERY BOOT' > "${REFIND_CONF}"
    envsubst < "${REFIND_TEMPLATE}" >> "${REFIND_CONF}" 2>>"${THIS_ERR}"
  else
    echo 'a ${REFIND_TEMPLATE} file must be present!' >> $THIS_LOG
    exit 1
  fi

  THEN=$(date +'%s')
  echo -n "This took $(($THEN - $NOW)) seconds " >>$THIS_LOG
  echo '<<< END of random updater >>>' >>$THIS_LOG

  zipper $THIS_LOG
  zipper $THIS_ERR
}

if [[ $# -eq 0 ]]; then
  phile_czekr "$HISTORY_FILE" $UPDATE_INTERVAL main
elif [[ $1 == "--force" ]]; then
  main
else
  echo 'unknown option'
  exit 1
fi


